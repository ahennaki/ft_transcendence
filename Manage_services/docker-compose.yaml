version: "3.9"

services:
  # nginx:
  #   container_name: nginx
  #   build:
  #     context: ./nginx_service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   networks:
  #     - transcendence
  #   restart: always

  postgres:
    image: postgres:16.3
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgres/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pgdatabase:/var/lib/postgresql/data/pgdata:rw
    networks:
      - transcendence
    restart: always

  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
    - "11211:11211"
    networks:
    - transcendence
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    ports:
    - "6379:6379"
    volumes:
      - redisv:/data
    restart: always
    networks:
    - transcendence

  server:
    container_name: server
    build:
      context: ../server/
      dockerfile: ../server/Dockerfile
    env_file:
      - .env
    ports:
    - "8800:8800"
    restart: always
    networks:
    - transcendence

  minio:
    image: minio/minio:latest
    ports:
    - 9000:9000
    - 9001:9001
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data --console-address ":9001"

  minio-client:
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm expo;
      /usr/bin/mc config host add --quiet --api s3v4 local http://minio:9000 minio minio123;
      /usr/bin/mc rb --force local/bucket/;
      /usr/bin/mc mb --quiet local/bucket/;
      /usr/bin/mc policy set public local/bucket;
      "
    depends_on:
      - minio

volumes:
  pgdatabase:
    driver: local
  redisv:
    driver: local

networks:
  transcendence:
    driver: bridge
