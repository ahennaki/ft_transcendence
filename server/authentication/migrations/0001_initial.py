# Generated by Django 5.0.7 on 2024-11-02 09:44

import authentication.models.user
import authentication.models.utils.validate_email
import authentication.models.utils.validate_name
import authentication.models.utils.validate_username
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=150, validators=[authentication.models.utils.validate_name.validate_name], verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[authentication.models.utils.validate_name.validate_name], verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[authentication.models.utils.validate_email.validate_email], verbose_name='email address')),
                ('username', models.CharField(max_length=150, unique=True, validators=[authentication.models.utils.validate_username.validate_username], verbose_name='username')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('token_last_change', models.DateTimeField(blank=True, null=True)),
                ('is_2fa_enabled', models.BooleanField(default=False, verbose_name='is_2fa_enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authentication.models.user.CustomUserManager()),
            ],
        ),
    ]
